{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","classNames","completed","title","TodoList","todos","map","todosWithUsers","userId","usersFromServer","find","userr","App","useState","setTodos","setTitle","setUser","titleError","setTitleError","userError","setUserError","action","method","onSubmit","event","preventDefault","newTodo","Math","max","type","value","onChange","target","placeholder","e","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.94521c9a.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../../types';\n\ntype Props = {\n  user: User | undefined;\n};\n\nexport const UserInfo = ({ user } : Props) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user?.email}`}>\n      {user?.name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport { Todo, User } from '../../types';\nimport { UserInfo } from '../UserInfo';\n\ntype TodoWithUser = Todo & {\n  user: User | undefined\n};\n\ntype Props = {\n  todo: TodoWithUser\n};\n\nexport const TodoInfo = ({ todo }: Props) => {\n  return (\n    <article\n      data-id={todo.id}\n      className={classNames(\n        'TodoInfo', { 'TodoInfo--completed': todo.completed },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n\n      <UserInfo user={todo.user} />\n    </article>\n  );\n};\n","import { Todo, User } from '../../types';\nimport { TodoInfo } from '../TodoInfo';\n\ntype TodoWithUser = Todo & {\n  user: User | undefined\n};\n\ntype Props = {\n  todos: TodoWithUser[]\n};\n\nexport const TodoList = ({ todos }: Props) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo todo={todo} />\n      ))}\n    </section>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\n\nconst todosWithUsers = todosFromServer.map(todo => {\n  const user = usersFromServer.find(userr => userr.id === todo.userId);\n\n  return {\n    ...todo,\n    user,\n  };\n});\n\nexport const App = () => {\n  const [todos, setTodos] = useState(todosWithUsers);\n  const [title, setTitle] = useState('');\n  const [user, setUser] = useState('');\n  const [titleError, setTitleError] = useState(false);\n  const [userError, setUserError] = useState(false);\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={(event) => {\n          event.preventDefault();\n          if (title && user) {\n            const maxIndex = Math.max(...todos.map(todo => todo.id)) + 1;\n            const newTodo = {\n              id: maxIndex,\n              title,\n              completed: false,\n              userId: +user,\n              user: usersFromServer.find(userr => userr.id === +user),\n            };\n\n            setTitle('');\n            setUser('');\n\n            setTodos([...todos, newTodo]);\n          } else if (!title && !user) {\n            setTitleError(true);\n            setUserError(true);\n          } else if (!title) {\n            setTitleError(true);\n          } else {\n            setUserError(true);\n          }\n        }}\n      >\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            value={title}\n            onChange={(event) => {\n              setTitle(event.target.value);\n              setTitleError(false);\n            }}\n            placeholder=\"Enter a title\"\n          />\n          {titleError && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            value={user}\n            onChange={(e) => {\n              setUser(e.target.value);\n              setUserError(false);\n            }}\n          >\n            <option value=\"\" disabled>Choose a user</option>\n            {usersFromServer.map(userr => (\n              <option value={userr.id}>{userr.name}</option>\n            ))}\n          </select>\n\n          {userError && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}